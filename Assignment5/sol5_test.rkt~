#lang racket
(require "sol5.rkt")
(require rackunit)
;; check racketlist to mupllist with normal list
(check-equal? (racketlist->mupllist '()) (aunit) "racketlist->mupllist test")
(check-equal? (racketlist->mupllist (list (int 3))) (apair (int 3) (aunit)) "racketlist->mupllist test")
(check-equal? (racketlist->mupllist (list (int 3) (int 4))) (apair (int 3) (apair (int 4) (aunit))) "racketlist->mupllist test")
   
;; check mupllist to racketlist with normal list
(check-equal? (mupllist->racketlist (aunit)) '() "racketlist->mupllist test")
(check-equal? (mupllist->racketlist (apair (int 3) (aunit))) (list (int 3)) "racketlist->mupllist test")
(check-equal? (mupllist->racketlist (apair (int 3) (apair (int 4) (aunit)))) (list (int 3) (int 4)) "racketlist->mupllist test")
(check-equal? (mupllist->racketlist (apair (int 3) (apair (int 4) (apair (int 5) (aunit))))) (list (int 3) (int 4) (int 5)) "racketlist->mupllist test")
